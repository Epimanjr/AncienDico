/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graphique.liste;

import base.activerecord.Link;
import graphique.chercher.PanChercher;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JComponent;
import javax.swing.JLabel;
import main.donnees.Donnees;

/**
 *
 * @author Maxime BLAISE
 */
public class PanApprendre extends javax.swing.JPanel {

    /**
     * Liste à pratiquer.
     */
    ArrayList<Link> liste;

    /**
     * Panel qui est à l'origine de ce panel
     */
    PanListe p;

    /**
     * Creates new form PanPratiquer
     *
     * @param liste .
     * @param p Panel qui est à l'origine de ce panel
     */
    public PanApprendre(ArrayList<Link> liste, PanListe p) {
        this.liste = liste;
        this.p = p;
        initComponents();

        /* Centrer label */
        labMot1.setHorizontalAlignment(JLabel.CENTER);
        labMot2.setHorizontalAlignment(JLabel.CENTER);

        /* Activation du contraste */
        activerContraste();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bCommencer = new javax.swing.JButton();
        labMot1 = new javax.swing.JLabel();
        labMot2 = new javax.swing.JLabel();
        next = new javax.swing.JButton();
        back = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(600, 450));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        bCommencer.setText("Commencer !!");
        bCommencer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCommencerActionPerformed(evt);
            }
        });

        labMot1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        labMot1.setOpaque(true);

        labMot2.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        labMot2.setOpaque(true);

        next.setText(">>>");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        back.setText("<<<");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(234, 234, 234)
                .addComponent(bCommencer, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(204, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(back)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(next)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labMot1, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)
                    .addComponent(labMot2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(labMot1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(bCommencer, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(labMot2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(next)
                    .addComponent(back))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bCommencerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCommencerActionPerformed
        // TODO add your handling code here:

        bCommencer.setVisible(false);
        afficherUnElement();

        /* Pour l'action au clavier */
        this.setFocusable(true);
        this.requestFocus();
    }//GEN-LAST:event_bCommencerActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // TODO add your handling code here:

        /* Affiche */
        afficherUnElement();
    }//GEN-LAST:event_nextActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:

        /* Affichage d'un élément si -> */
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            afficherUnElement();
        }
    }//GEN-LAST:event_formKeyPressed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:

        p.fen.setContentPane(p);
        p.fen.pack();
    }//GEN-LAST:event_backActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCommencer;
    private javax.swing.JButton back;
    private javax.swing.JLabel labMot1;
    private javax.swing.JLabel labMot2;
    private javax.swing.JButton next;
    // End of variables declaration//GEN-END:variables
    public int prec = -1;

    /**
     * Affiche un élément
     */
    private void afficherUnElement() {
        /* Nombre aléatoire */
        int alea = (int) (Math.random() * liste.size());
        while (alea == prec) {
            alea = (int) (Math.random() * liste.size());
        }
        prec = alea;

        /* Sélection liaison */
        Link l = liste.get(alea);

        /* Remplissage label */
        labMot1.setText(l.getInstancemot1().toString());
        labMot2.setText(l.getInstancemot2().toString());

        /* Lecture */
        if (Donnees.isVoice()) {
            /* Suffixe */
            String suffixe = l.getInstancemot2().getType() + l.getInstancemot2().getId() + ".mp3";

            /* Lancement du Thread */
            t = new Thread(new TraitementVoix(suffixe));
            t.start();
        }
    }

    /**
     * Activation du contraste
     */
    public final void activerContraste() {
        // Liste qui va servir pour tous les composants
        ArrayList<JComponent> l;

        // Pour la couleur de fond général
        l = new ArrayList<>();
        l.add(this);
        l.add(labMot1);
        l.add(labMot2);
        PanChercher.applicationCouleur("fond", l, true);

        // Pour la couleur du premier label
        l = new ArrayList<>();
        l.add(labMot1);
        PanChercher.applicationCouleur("labelPratiquer1", l, false);

        // Pour la couleur du deuxième label
        l = new ArrayList<>();
        l.add(labMot2);
        PanChercher.applicationCouleur("labelPratiquer2", l, false);
    }

    public Thread t;

}
