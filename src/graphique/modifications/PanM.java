/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graphique.modifications;

import base.activerecord.Liaison;
import base.activerecord.Mot;
import graphique.Fenetre;
import newsupermdico.donnees.Donnees;

/**
 *
 * @author Maxime
 */
public class PanM extends javax.swing.JPanel {

    Fenetre f;

    /**
     * Creates new form PanM
     *
     * @param f Fenetre
     */
    public PanM(Fenetre f) {
        initComponents();
        this.f = f;

        // Activation du contraste
        activerContraste();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        saisie = new javax.swing.JTextField();
        res = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(600, 450));

        saisie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saisieActionPerformed(evt);
            }
        });

        res.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(res, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saisie, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(saisie, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(res, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(148, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saisieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saisieActionPerformed
        // TODO add your handling code here:

        String[] saisies = saisie.getText().split(";");
        res.setText("<html>Split de la requête ... taille " + saisies.length + "<br/>");

        switch (saisies.length) {
            case 1:
                switch (saisies[0]) {
                    case "stat":
                        afficherStatistiques();
                        break;
                    case "contraste":
                        f.actionBoutonContraste();
                        break;
                    case "help":
                        afficherAide();
                        break;
                }
            case 6:
                switch (saisies[0]) {
                    case "lfrch":
                        ajoutLiaisonFrch(saisies[1], saisies[2], saisies[3], saisies[4], saisies[5]);
                        break;
                }
                break;
        }
    }//GEN-LAST:event_saisieActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel res;
    private javax.swing.JTextField saisie;
    // End of variables declaration//GEN-END:variables

    /**
     * Ajout d'une liaison frch avec les mots.
     *
     * @param genre .
     * @param nom .
     * @param phonetique .
     * @param ideo .
     * @param pinyin .
     */
    private void ajoutLiaisonFrch(String genre, String nom, String phonetique, String ideo, String pinyin) {
        res.setText(res.getText() + "Compris ! Ajout d'une liaison frch ... <br/>");

        // Création mot fr
        res.setText(res.getText() + "Construction du mot français ... ");
        Mot motfr = new Mot("fr", nom, phonetique, genre);
        res.setText(res.getText() + "OK -> " + motfr.toString() + "<br/>");
        res.setText(res.getText() + "Ajout du mot français à la base ... ");
        motfr.insert(false);
        res.setText(res.getText() + " OK.<br/>");

        // Création mot ch
        res.setText(res.getText() + "Construction du mot chinois ... ");
        Mot motch = new Mot("ch", ideo, pinyin, "");
        res.setText(res.getText() + "OK -> " + motch.toString() + "<br/>");
        res.setText(res.getText() + "Ajout du mot chinois à la base ... ");
        motch.insert(false);
        res.setText(res.getText() + " OK.<br/>");

        // Création liaison frch
        res.setText(res.getText() + "Construction de la liaison française-chinoise ... ");
        Liaison frch = new Liaison("frch", nom, ideo);
        res.setText(res.getText() + "OK -> " + frch.toString() + "<br/>");
        res.setText(res.getText() + "Ajout de la liaison à la base ... ");
        frch.insert(false);
        res.setText(res.getText() + " OK.<br/></html>");

    }

    /**
     * Activation du contraste.
     */
    public final void activerContraste() {
        /* Modification JTextField */
        saisie.setBackground(Donnees.contraste.couleurs.get("textFieldFond"));
        saisie.setForeground(Donnees.contraste.couleurs.get("textField"));

        /* Modification PANEL */
        this.setBackground(Donnees.contraste.couleurs.get("fond"));

        /* Modification Label */
        res.setBackground(Donnees.contraste.couleurs.get("fond"));
        res.setForeground(Donnees.contraste.couleurs.get("labelResultats"));
    }

    /**
     * Affichage des statistiques
     */
    private void afficherStatistiques() {
        res.setText(res.getText() + "Pas encore implémenté les stats mais ça va venir !</html>");
    }

    /**
     * Affichage de l'aide
     */
    private void afficherAide() {
        res.setText(res.getText() + "Débrouille-toi !");
    }
}
