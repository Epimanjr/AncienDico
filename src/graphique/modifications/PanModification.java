/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graphique.modifications;

import base.activerecord.Liaison;
import base.activerecord.Mot;
import exception.ChampSaisieVideException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import main.donnees.Donnees;

/**
 *
 * @author Maxime
 */
public class PanModification extends javax.swing.JPanel {

    public int t;

    /**
     * Creates new form PanModification
     */
    public PanModification() {
        initComponents();

        /* Activation du contraste */
        activerContraste();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        chercher = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(600, 450));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "En attente ..."
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Charger les mots");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Charger les liaisons");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Sauvegarder");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        chercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chercherActionPerformed(evt);
            }
        });

        jButton4.setText("Chercher");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jButton1)
                        .addGap(54, 54, 54)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(chercher, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chercher, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(26, 26, 26))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        liaisonCharge = false;
        motCharge = true;

        Object[] mots = Mot.tousLesMots();

        int taille = mots.length;
        t = taille;
        Object[][] obj = new Object[taille][5];
        for (int i = 0; i < taille; i++) {
            Mot m = (Mot) mots[i];
            obj[i][0] = m.getId();
            obj[i][1] = m.getType();
            obj[i][2] = m.getNom();
            obj[i][3] = m.getPhonetique();
            obj[i][4] = m.getGenre();
        }
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                obj,
                new String[]{
                    "Id", "Type", "Intitulé", "Phonétique", "Genre"
                }
        ));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        if (motCharge) {
            /* Création de la nouvelle table de mots */
            Mot[] tabNouveau = new Mot[t];

            /* Remplissage */
            for (int i = 0; i < t; i++) {

                int id = new Integer(jTable1.getValueAt(i, 0).toString());
                String type = jTable1.getValueAt(i, 1).toString();
                String nom = jTable1.getValueAt(i, 2).toString();
                String phonetique = jTable1.getValueAt(i, 3).toString();
                String genre = jTable1.getValueAt(i, 4).toString();

                tabNouveau[i] = new Mot(id, type, nom, phonetique, genre);
            }

            /* Mise à jour */
            ArrayList<String> listeRes = Mot.updateDifference(tabNouveau);

            String message = "Tous a été mis à jour.";
            if (Donnees.isModeBdd()) {
                message = "Liste des mots mis à jour : \n";
                message += "----------------------------------\n";
                if (listeRes != null) {
                    message = listeRes.stream().map((s) -> "\t" + s + "\n").reduce(message, String::concat);
                }
            }

            JOptionPane.showMessageDialog(null, message, "Succès", JOptionPane.INFORMATION_MESSAGE);
        } else {
            /* Création de la nouvelle table de mots */
            Liaison[] tabNouveau = new Liaison[t];

            /* Remplissage */
            for (int i = 0; i < t; i++) {

                int id = new Integer(jTable1.getValueAt(i, 0).toString());
                String type = jTable1.getValueAt(i, 1).toString();
                String mot1 = jTable1.getValueAt(i, 2).toString();
                String mot2 = jTable1.getValueAt(i, 3).toString();

                tabNouveau[i] = new Liaison(id, type, mot1, mot2);
            }

            /* Mise à jour */
            ArrayList<String> listeRes = Liaison.updateDifference(tabNouveau);

            String message = "Tous a été mis à jour.";
            if (Donnees.isModeBdd()) {
                message = "Liste des liaisons mis à jour : \n";
                message += "--------------------------------------\n";
                if (listeRes != null) {
                    message = listeRes.stream().map((s) -> "\t" + s + "\n").reduce(message, String::concat);
                }
            }

            JOptionPane.showMessageDialog(null, message, "Succès", JOptionPane.INFORMATION_MESSAGE);
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        liaisonCharge = true;
        motCharge = false;

        Object[] liaisons = Liaison.toutesLesLiaisons();

        int taille = liaisons.length;
        t = taille;
        Object[][] obj = new Object[taille][4];
        for (int i = 0; i < taille; i++) {
            Liaison m = (Liaison) liaisons[i];
            obj[i][0] = m.getId();
            obj[i][1] = m.getType();
            obj[i][2] = m.getMot1();
            obj[i][3] = m.getMot2();
        }
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                obj,
                new String[]{
                    "Id", "Type", "Mot 1", "Mot 2"
                }
        ));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void chercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chercherActionPerformed
        try {
            // TODO add your handling code here:

            // Chercher
            actionChercher();
        } catch (ChampSaisieVideException ex) {
            JOptionPane.showMessageDialog(null, "Erreur, champ de saisie vide.", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_chercherActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            // TODO add your handling code here:

            // Chercher
            actionChercher();
        } catch (ChampSaisieVideException ex) {
            JOptionPane.showMessageDialog(null, "Erreur, champ de saisie vide.", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    boolean motCharge = false;
    boolean liaisonCharge = false;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField chercher;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    public final void activerContraste() {
        /* Modification PANEL */
        this.setBackground(Donnees.contraste.couleurs.get("fond"));

        jTable1.setBackground(Donnees.contraste.couleurs.get("fond"));
        jTable1.setForeground(Donnees.contraste.couleurs.get("table"));

        jButton1.setBackground(Donnees.contraste.couleurs.get("boutonFond"));
        jButton1.setForeground(Donnees.contraste.couleurs.get("bouton"));
        jButton2.setBackground(Donnees.contraste.couleurs.get("boutonFond"));
        jButton2.setForeground(Donnees.contraste.couleurs.get("bouton"));
        jButton3.setBackground(Donnees.contraste.couleurs.get("boutonFond"));
        jButton3.setForeground(Donnees.contraste.couleurs.get("bouton"));
    }

    /**
     * On cherche un mot.
     *
     * @throws exception.ChampSaisieVideException .
     */
    public void actionChercher() throws ChampSaisieVideException {
        // Si mot non renseigné
        if (chercher.getText().equals("")) {
            throw new ChampSaisieVideException();
        }

        // Taille de la table
        int tailleTable = jTable1.getModel().getRowCount();

        // Initialisation
        boolean trouve = false;
        String message = "";
       // int id = 0;

        // Parcours de la table
        try {
            for (int i = 0; i < tailleTable; i++) {
                // Récupération du nom
                String nom = jTable1.getValueAt(i, 2).toString();

                // Si c'est le mot qu'on cherche
                if (nom.equals(chercher.getText())) {
                    message += "Trouvé !\nID=" + jTable1.getValueAt(i, 0).toString() + "\n";
                   // id=new Integer(jTable1.getValueAt(i, 0).toString());
                    trouve = true;
                }
            }

            // Affichage d'un message
            if (trouve) {
                JOptionPane.showMessageDialog(null, message, "OK", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Erreur, non trouvé.", "Erreur", JOptionPane.ERROR_MESSAGE);
            }

        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(null, "Erreur, table non initialisé.", "Erreur", JOptionPane.ERROR_MESSAGE);
        }

    }
}
