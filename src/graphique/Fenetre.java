/*
 * Fenêtre principale du logiciel, utilisant javax.swing.
 */
package graphique;

import graphique.modifications.PanM;
import graphique.modifications.PanModification;
import graphique.liste.PanApprendre;
import graphique.chercher.PanChercher;
import graphique.internet.PanWordReference;
import main.jlp;
import graphique.liste.PanListe;
import graphique.liste.PanPratiquer;
import graphique.modifications.PanAjoutOptimise;
import graphique.options.PanContraste;
import graphique.options.PanImportExport;
import graphique.options.PanOptions;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import main.donnees.Contraste;
import main.donnees.Donnees;
import static main.donnees.Donnees.contraste;

/**
 *
 * @author Maxime BLAISE
 */
public class Fenetre extends javax.swing.JFrame {

    /**
     * Panel de recherche.
     */
    public static PanChercher panChercher;

    /**
     * Panel qui permet la modification.
     */
    public static PanModification panModification;

    /**
     * Panel qui permet d'ajouter des données
     */
    public static PanAjoutOptimise panAjoutDonnees;

    /**
     * Panel qui permet d'importer/exporter la base de données.
     */
    public static PanImportExport panImportExport;

    /**
     * Panel qui permet de gérer les listes panListeCh
     */
    public static PanListe panListeCh;

    /**
     * Panel qui permet de gérer les listes panListeEn
     */
    public static PanListe panListeEn;

    public static PanListe panListeDe;

    /**
     * Panel qui gère l'apprentissage.
     */
    public static PanApprendre panApprendre;

    /**
     * Panel qui gère la pratique.
     */
    public static PanPratiquer panPratiquer;

    /**
     * Panel qui gère les options du logiciel.
     */
    public static PanOptions panOptions;

    /**
     * Panel qui gère le langage.
     */
    public static PanM panM;

    /**
     * Panel qui gère les contrastes.
     */
    public static PanContraste panContraste;

    /**
     * Panel qui gère la recherche et l'ajout avec WR.
     */
    public static PanWordReference panWR;

    /**
     * Instance qui gère le son.
     */
    public static jlp mp = new jlp();

    /**
     * Creates new form Fenetre
     */
    public Fenetre() {
        // Initialisation données
        Donnees.init();

        initComponents();

        if (Donnees.isModeBdd()) {
            jMenuBar1.add(new JLabel("                                                           Mode en ligne."));
        } else {
            jMenuBar1.add(new JLabel("                                                           Mode hors ligne."));

            // Désactivation du menu Import/Export
            jMenuItem7.setVisible(false);
        }

        //setIconImage(new ImageIcon(this.getClass().getResource("iconfrch.png")).getImage());

        // Initialisation fenêtre
        panChercher = new PanChercher();
        setContentPane(panChercher);

        // Activation du contraste
        // actionBoutonContraste();
        contraste = new Contraste(false);
        activationContraste();

        // Location de la fenêtre
        //get local graphics environment
        GraphicsEnvironment graphicsEnvironment = GraphicsEnvironment.getLocalGraphicsEnvironment();

        //get maximum window bounds
        Rectangle maximumWindowBounds = graphicsEnvironment.getMaximumWindowBounds();

        int largeur = (int) (maximumWindowBounds.getWidth() / 2 - 300);
        int hauteur = (int) (maximumWindowBounds.getHeight() / 2 - 225);

        this.setLocation(largeur, hauteur);

        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        itemListeFrEn = new javax.swing.JMenuItem();
        itemListeFrCh = new javax.swing.JMenuItem();
        idemListeFrDe = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SuperMDico ©2014");
        setResizable(false);

        jMenuBar1.setBackground(new java.awt.Color(255, 0, 0));
        jMenuBar1.setForeground(new java.awt.Color(0, 0, 255));
        jMenuBar1.setOpaque(true);

        jMenu1.setText("Menu");

        jMenuItem1.setText("Chercher");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editions");

        jMenuItem2.setText("Modification");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem6.setText("Ajout données");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem8.setText("Langage M");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem8);

        jMenu5.setText("Internet");

        jMenuItem11.setText("WordReference");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem11);

        jMenu2.add(jMenu5);

        jMenuBar1.add(jMenu2);

        jMenu4.setText("Listes");

        itemListeFrEn.setText("Liste Français-Anglais");
        itemListeFrEn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemListeFrEnActionPerformed(evt);
            }
        });
        jMenu4.add(itemListeFrEn);

        itemListeFrCh.setText("Liste Français-Chinois");
        itemListeFrCh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemListeFrChActionPerformed(evt);
            }
        });
        jMenu4.add(itemListeFrCh);

        idemListeFrDe.setText("Liste Français-Allemand");
        idemListeFrDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idemListeFrDeActionPerformed(evt);
            }
        });
        jMenu4.add(idemListeFrDe);

        jMenuBar1.add(jMenu4);

        jMenu3.setText("Settings");

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem5.setText("Activer le contraste élevé");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuItem7.setText("Importer/Exporter");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        if(Donnees.isModeBdd()) {
            jMenu3.add(jMenuItem7);
        }

        jMenuItem10.setText("Contraste");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem10);

        jMenuItem9.setText("Options");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 431, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:

        setContentPane(panChercher);
        pack();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:

        if (panModification == null) {
            panModification = new PanModification();
        }
        setContentPane(panModification);
        pack();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:

        // Activation du contraste
        actionBoutonContraste();

    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void itemListeFrChActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemListeFrChActionPerformed
        // TODO add your handling code here:

        panListeCh = new PanListe("fr", "ch", this);
        setContentPane(panListeCh);
        pack();
    }//GEN-LAST:event_itemListeFrChActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:

        if (panImportExport == null) {
            panImportExport = new PanImportExport();
        }
        setContentPane(panImportExport);
        pack();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:

        panM = new PanM(this);
        setContentPane(panM);
        pack();
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:

        if (panOptions == null) {
            panOptions = new PanOptions();
        }
        setContentPane(panOptions);
        pack();
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:

        panContraste = new PanContraste();
        setContentPane(panContraste);
        pack();
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // TODO add your handling code here:

        if (panWR == null) {
            panWR = new PanWordReference();
        }
        setContentPane(panWR);
        pack();
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void itemListeFrEnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemListeFrEnActionPerformed
        // TODO add your handling code here:

        panListeEn = new PanListe("fr", "en", this);
        setContentPane(panListeEn);
        pack();
    }//GEN-LAST:event_itemListeFrEnActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:

        if (panAjoutDonnees == null) {
            panAjoutDonnees = new PanAjoutOptimise();
        }
        setContentPane(panAjoutDonnees);
        pack();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void idemListeFrDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idemListeFrDeActionPerformed
        // TODO add your handling code here:

        panListeDe = new PanListe("fr", "de", this);
        setContentPane(panListeDe);
        pack();
    }//GEN-LAST:event_idemListeFrDeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Fenetre().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem idemListeFrDe;
    private javax.swing.JMenuItem itemListeFrCh;
    private javax.swing.JMenuItem itemListeFrEn;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    // End of variables declaration//GEN-END:variables

    /**
     * Activation du contraste.
     *
     * @return true ou false
     */
    public final boolean activationContraste() {

        if (!Donnees.contraste.verifier()) {
            return false;
        }

        panChercher.activerContraste();

        if (panModification != null) {
            panModification.activerContraste();
        }


        if (panImportExport != null) {
            panImportExport.activerContraste();
        }

        if (panListeCh != null) {
            panListeCh.activerContraste();
        }

        if (panListeEn != null) {
            panListeEn.activerContraste();
        }

        if (panM != null) {
            panM.activerContraste();
        }

        if (panApprendre != null) {
            panApprendre.activerContraste();
        }

        if (panPratiquer != null) {
            panPratiquer.activerContraste();
        }

        if (panOptions != null) {
            panOptions.activerContraste();
        }

        return true;
    }

    public final void actionBoutonContraste() {
        if (jMenuItem5.getText().equals("Activer le contraste élevé")) {
            // On active le contraste élevé

            contraste = new Contraste(true);

        } else {
            // On désactive le contraste élevé

            contraste = new Contraste(false);

        }

        // Activation contracte
        if (activationContraste()) {
            if (jMenuItem5.getText().equals("Activer le contraste élevé")) {
                jMenuItem5.setText("Désactiver le contraste élevé");

            } else {
                jMenuItem5.setText("Activer le contraste élevé");

            }
        }
    }

}
