/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package base;

import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author Maxime
 */
public class PanBase extends javax.swing.JPanel {

    /**
     * Creates new form PanBase
     */
    public PanBase() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        boutonCharger = new javax.swing.JButton();
        boutonSauvegarder = new javax.swing.JButton();
        labelNomBase = new javax.swing.JLabel();
        labelMotDePasse = new javax.swing.JLabel();
        labelLogin = new javax.swing.JLabel();
        saisieNomBase = new javax.swing.JTextField();
        saisieLogin = new javax.swing.JTextField();
        saisieMotdePasse = new javax.swing.JPasswordField();

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Assistant de gestion de connexion à la base de données : ");

        boutonCharger.setText("Charger");
        boutonCharger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonChargerActionPerformed(evt);
            }
        });

        boutonSauvegarder.setText("Tester et sauvegarder");
        boutonSauvegarder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonSauvegarderActionPerformed(evt);
            }
        });

        labelNomBase.setText("Nom de la base de données : ");

        labelMotDePasse.setText("Mot de passe : ");

        labelLogin.setText("Login : ");

        saisieMotdePasse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saisieMotdePasseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(boutonSauvegarder, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(154, 154, 154))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boutonCharger))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelNomBase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelMotDePasse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(saisieMotdePasse)
                    .addComponent(saisieNomBase, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saisieLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boutonCharger)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNomBase, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saisieNomBase, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saisieLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saisieMotdePasse)
                        .addGap(3, 3, 3))
                    .addComponent(labelMotDePasse, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69)
                .addComponent(boutonSauvegarder)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Action du bouton lorsque l'utilisateur appui sur le bouton charger
     *
     * @param evt événement
     */
    private void boutonChargerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonChargerActionPerformed
        // TODO add your handling code here:

        // Récupération des données
        BaseInformation bi = BaseInformation.lectureInformations();

        if (bi == null) {
            // Affichage d'un message d'erreur
            JOptionPane.showMessageDialog(null, "Lecture impossible\nPeut-être fichier manquant ??.", "Information", JOptionPane.ERROR_MESSAGE);
        } else {
            // Affichage des informations
            if (bi.getLogin() != null) {
                saisieLogin.setText(bi.getLogin());
            }
            if (bi.getPassword() != null) {
                saisieMotdePasse.setText(bi.getPassword());
            }
            if (bi.getDbname() != null) {
                saisieNomBase.setText(bi.getDbname());
            }
        }

    }//GEN-LAST:event_boutonChargerActionPerformed

    /**
     * Mode console pour gérer les informations de connexion
     */
    public static void assistantGestionConsole() {
        System.out.println("*** ASSISTANT DE GESTION DE LA CONNEXION A LA BASE DE DONNEES ***");

        // Pour la lecture au clavier
        Scanner sc = new Scanner(System.in);

        // Demande du nom de la base
        System.out.print("Database name : ");
        String nomBase = sc.nextLine();

        // Demande du login
        System.out.print("Login : ");
        String login = sc.nextLine();

        // Demande du mot de passe
        System.out.println("Password : ");
        String password = sc.nextLine();

        // Création de l'objet BaseInformation
        BaseInformation bi = new BaseInformation("mysql", "com.mysql.jdbc.Driver", nomBase, login, password, "//localhost");

        // Test de la connexion
        BaseSetting bs = new BaseSetting(bi);
        if (bs.testerConnexion()) {
            // Connexion OK
            System.out.println("Connexion OK !");

            // Demande de confirmation
            System.out.print("Voulez-vous écrire ces informations ? (Y-n)");
            String confirm = sc.nextLine();

            if (confirm.equals("Y") || confirm.equals("y")) {
                // Ecriture des informations
                bi.ecrireInformations();
            }
        } else {
            // Connexion NON OK
            System.out.println("Connexion NON OK !");
        }

        System.out.println("*** FIN DE L'ASSISTANT DE GESTION ***");
    }

    /**
     * Action lorsque l'utilisateur clique sur le bouton tester et sauvegarder
     *
     * @param evt événement
     */
    private void boutonSauvegarderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonSauvegarderActionPerformed
        // TODO add your handling code here:

        // Sauvegarde
        actionSauvegarder();
    }//GEN-LAST:event_boutonSauvegarderActionPerformed

    private void saisieMotdePasseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saisieMotdePasseActionPerformed
        // TODO add your handling code here:
        
        // Sauvegarde
        actionSauvegarder();
    }//GEN-LAST:event_saisieMotdePasseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boutonCharger;
    private javax.swing.JButton boutonSauvegarder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labelLogin;
    private javax.swing.JLabel labelMotDePasse;
    private javax.swing.JLabel labelNomBase;
    private javax.swing.JTextField saisieLogin;
    private javax.swing.JPasswordField saisieMotdePasse;
    private javax.swing.JTextField saisieNomBase;
    // End of variables declaration//GEN-END:variables

    public void actionSauvegarder() {
        // Création de l'objet BaseInformation
        BaseInformation bi = new BaseInformation("mysql", "com.mysql.jdbc.Driver", saisieNomBase.getText(), saisieLogin.getText(), saisieMotdePasse.getText(), "//localhost");

        // D'abord on test
        BaseSetting bs = new BaseSetting(bi);
        if (bs.testerConnexion()) {
            // Connexion OK
            // Ecriture
            if (bi.ecrireInformations()) {
                // Connexion OK et ecriture OK
                JOptionPane.showMessageDialog(null, "Le test a réussi\nEt l'écriture a réussi !.", "Succès", JOptionPane.INFORMATION_MESSAGE);
            } else {
                // Connexion OK mais ecriture NON OK
                JOptionPane.showMessageDialog(null, "Le test a réussi\nMais l'écriture a échoué.", "Information", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
}
